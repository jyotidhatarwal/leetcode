class Solution {
    public boolean isBipartite(int[][] graph) {
        int n = graph.length;
        int colorArray[] = new int[n];
        LinkedList<Integer> que = new LinkedList<>();
        for(int i=0;i<n;i++){
            if(colorArray[i] == 0){
                que.add(i);
                colorArray[i]= 1;
                while(que.size() > 0){
                    int size = que.size();
                    while(size-- > 0){
                        int rem = que.removeFirst();
                        for(int nbrs : graph[rem]){
                            if(colorArray[nbrs] == colorArray[rem]) return false;
                            else if(colorArray[nbrs] == 0){
                                que.add(nbrs);
                                colorArray[nbrs] = -colorArray[rem]; 
                            }
                        }
                    }
                }
            }
        }
        return true;
    }
}
